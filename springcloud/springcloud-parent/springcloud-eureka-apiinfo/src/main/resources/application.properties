#声明本服务在注册中心展示的名字、也是在网关访问时定位服务的名字
spring.application.name=spring-cloud-eureka-apiinfo
#在windows下的hosts文件中增加了  127.0.0.1  swapping1
eureka.instance.hostname=swapping1
server.port=8010
eureka.client.service-url.defaultZone=http://${eureka.instance.hostname}:8000/eureka/
#配置数据库连接信息
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://192.168.17.150:3306/mysql_springcloud
spring.datasource.username=root
spring.datasource.password=lifeifei19880623
spring.datasource.max-wait=10000
spring.datasource.initial-size=5
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

#Spring Boot 默认是不注入这些属性值的，需要自己绑定
#druid 数据源专有配置
#初始化时建立物理连接的个数
spring.datasource.initialSize=5
#最小连接池数量
spring.datasource.minIdle=5
#最大连接池数量
spring.datasource.maxActive=20
#获取连接时最大等待时间
spring.datasource.maxWait=60000
#Destory线程检测连接的间隔时间
spring.datasource.timeBetweenEvictionRunsMillis=60000
#连接保持空闲而不被驱逐的最长时间
spring.datasource.minEvictableIdleTimeMillis=300000
#检测连接是否有效的sql
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
#申请连接时执行validationQuery检测连接是否有效
spring.datasource.testOnBorrow=false
#归还连接时执行validationQuery检测连接是否有效
spring.datasource.testOnReturn=false
#是否缓存preparedStatements
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000


#mybatis的xml的路径
mybatis.mapper-locations=classpath:mapper/*.xml
#接入redis
#设置缓存类型是redis
spring.cache.type=redis
#设置redis的数据库
spring.redis.database=0
#设置redis的ip
spring.redis.host=192.168.17.150
#设置redis的端口
spring.redis.port=6379
#设置redis的密码
spring.redis.password=lifeifei19880623
#redis的连接超时时间(ms)
spring.redis.timeout=1000
#设置连接池的最大连接数
spring.redis.jedis.pool.max-active=8
#设置最大等待时间(ms)
spring.redis.jedis.pool.max-wait=5000
#设置最大空闲数
spring.redis.jedis.pool.max-idle=8
#设置最小空闲数
spring.redis.jedis.pool.min-idle=0
spring.redis.block-when-exhausted=true



